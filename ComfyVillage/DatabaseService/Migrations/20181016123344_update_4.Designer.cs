// <auto-generated />
using System;
using DatabaseService.DbClass;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseService.Migrations
{
    [DbContext(typeof(VillageContext))]
    [Migration("20181016123344_update_4")]
    partial class update_4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("CV.Agents.Rabbit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("LocationId");

                    b.Property<Guid?>("SpeedId");

                    b.Property<float>("currentVelocity");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("SpeedId");

                    b.ToTable("Rabbits");
                });

            modelBuilder.Entity("CV.Agents.Tree", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("LocationId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("CV.Map.basicStruct.SpeedVector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("X");

                    b.Property<float>("Y");

                    b.Property<float>("Z");

                    b.HasKey("Id");

                    b.ToTable("SpeedVector");
                });

            modelBuilder.Entity("CV.Map.basicStruct.WorldLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("X");

                    b.Property<float>("Y");

                    b.Property<float>("Z");

                    b.HasKey("Id");

                    b.ToTable("WorldLocation");
                });

            modelBuilder.Entity("CV.Agents.Rabbit", b =>
                {
                    b.HasOne("CV.Map.basicStruct.WorldLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("CV.Map.basicStruct.SpeedVector", "Speed")
                        .WithMany()
                        .HasForeignKey("SpeedId");
                });

            modelBuilder.Entity("CV.Agents.Tree", b =>
                {
                    b.HasOne("CV.Map.basicStruct.WorldLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
